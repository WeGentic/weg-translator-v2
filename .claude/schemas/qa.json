{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Tauri Project User Q&A Session",
  "description": "Structured requirements analysis and clarification session",
  "type": "object",
  "required": [
    "project_name",
    "current_understanding",
    "critical_gaps",
    "questions",
    "technical_debt_considerations"
  ],
  "additionalProperties": false,
  "properties": {
    "project_name": {
      "type": "string",
      "pattern": "^[a-z0-9-]+$",
      "minLength": 3,
      "maxLength": 50,
      "description": "Kebab-case project identifier"
    },
    "current_understanding": {
      "type": "object",
      "required": ["summary", "key_points", "assumptions"],
      "additionalProperties": false,
      "properties": {
        "summary": {
          "type": "string",
          "minLength": 200,
          "maxLength": 2000,
          "description": "Comprehensive summary of current understanding from user's request"
        },
        "key_points": {
          "type": "array",
          "minItems": 3,
          "maxItems": 15,
          "description": "Key points understood from requirements",
          "items": {
            "type": "object",
            "required": ["point", "source", "confidence"],
            "additionalProperties": false,
            "properties": {
              "point": {
                "type": "string",
                "minLength": 30,
                "maxLength": 300,
                "description": "Specific point understood"
              },
              "source": {
                "type": "string",
                "enum": [
                  "user-input",
                  "requirements",
                  "codebase-analysis",
                  "design",
                  "inference"
                ],
                "description": "Source of this understanding"
              },
              "confidence": {
                "type": "string",
                "enum": ["high", "medium", "low"],
                "description": "Confidence level in this understanding"
              },
              "related_requirements": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^(FR|NFR)-\\d{3}$"
                },
                "description": "Related requirement IDs"
              }
            }
          }
        },
        "assumptions": {
          "type": "array",
          "minItems": 0,
          "maxItems": 10,
          "description": "Assumptions made based on understanding",
          "items": {
            "type": "object",
            "required": ["assumption", "needs_validation"],
            "properties": {
              "assumption": {
                "type": "string",
                "minLength": 30,
                "maxLength": 300,
                "description": "Assumption being made"
              },
              "needs_validation": {
                "type": "boolean",
                "description": "Whether this assumption requires user validation"
              },
              "risk_if_wrong": {
                "type": "string",
                "enum": ["critical", "high", "medium", "low"],
                "description": "Risk level if assumption is incorrect"
              }
            }
          }
        }
      }
    },
    "critical_gaps": {
      "type": "array",
      "minItems": 0,
      "maxItems": 20,
      "description": "Specific missing information identified",
      "items": {
        "type": "object",
        "required": ["gap_id", "gap", "impact", "category"],
        "additionalProperties": false,
        "properties": {
          "gap_id": {
            "type": "string",
            "pattern": "^GAP-\\d{3}$",
            "description": "Gap identifier (e.g., GAP-001)"
          },
          "gap": {
            "type": "string",
            "minLength": 30,
            "maxLength": 500,
            "description": "Description of the missing information"
          },
          "impact": {
            "type": "string",
            "enum": ["blocking", "high", "medium", "low"],
            "description": "Impact of this gap on project progress"
          },
          "category": {
            "type": "string",
            "enum": [
              "architecture",
              "requirements",
              "technical-constraints",
              "user-flow",
              "integration",
              "performance",
              "security",
              "business-logic"
            ],
            "description": "Category of the gap"
          },
          "affects": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^(FR|NFR|COMP|FEAT)-\\d{3}$"
            },
            "description": "IDs of items affected by this gap"
          },
          "addressed_by_question": {
            "type": "string",
            "pattern": "^Q-\\d{3}$",
            "description": "Question ID that addresses this gap"
          }
        }
      }
    },
    "questions": {
      "type": "object",
      "required": ["blocking", "high", "medium", "low"],
      "additionalProperties": false,
      "properties": {
        "blocking": {
          "type": "array",
          "minItems": 0,
          "maxItems": 10,
          "description": "BLOCKING - Must answer before proceeding",
          "items": {
            "$ref": "#/definitions/question"
          }
        },
        "high": {
          "type": "array",
          "minItems": 0,
          "maxItems": 15,
          "description": "HIGH - Strongly impacts design",
          "items": {
            "$ref": "#/definitions/question"
          }
        },
        "medium": {
          "type": "array",
          "minItems": 0,
          "maxItems": 20,
          "description": "MEDIUM - Affects implementation details",
          "items": {
            "$ref": "#/definitions/question"
          }
        },
        "low": {
          "type": "array",
          "minItems": 0,
          "maxItems": 15,
          "description": "LOW - Nice to clarify",
          "items": {
            "$ref": "#/definitions/question"
          }
        }
      }
    },
    "technical_debt_considerations": {
      "type": "object",
      "required": ["summary", "potential_debt_items"],
      "additionalProperties": false,
      "properties": {
        "summary": {
          "type": "string",
          "minLength": 100,
          "maxLength": 3000,
          "description": "Overall summary of potential technical debt"
        },
        "potential_debt_items": {
          "type": "array",
          "minItems": 0,
          "maxItems": 15,
          "description": "Specific technical debt items this change might introduce",
          "items": {
            "type": "object",
            "required": ["id", "debt_item", "severity", "mitigation"],
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^TD-\\d{3}$",
                "description": "Technical debt identifier (e.g., TD-001)"
              },
              "debt_item": {
                "type": "string",
                "minLength": 50,
                "maxLength": 500,
                "description": "Description of the technical debt"
              },
              "category": {
                "type": "string",
                "enum": [
                  "code-quality",
                  "architecture",
                  "performance",
                  "security",
                  "testing",
                  "documentation",
                  "maintainability",
                  "scalability"
                ],
                "description": "Category of technical debt"
              },
              "severity": {
                "type": "string",
                "enum": ["critical", "high", "medium", "low"],
                "description": "Severity of the technical debt"
              },
              "impact": {
                "type": "string",
                "minLength": 30,
                "maxLength": 500,
                "description": "Impact if left unaddressed"
              },
              "mitigation": {
                "type": "string",
                "minLength": 30,
                "maxLength": 500,
                "description": "Strategy to mitigate or address this debt"
              },
              "when_to_address": {
                "type": "string",
                "enum": ["immediately", "before-phase-2", "before-phase-3", "post-mvp", "backlog"],
                "description": "When this debt should be addressed"
              },
              "estimated_effort": {
                "type": "string",
                "pattern": "^\\d+-\\d+\\s+(hours|days)$",
                "description": "Estimated effort to address (e.g., '4-8 hours')"
              },
              "related_components": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^COMP-\\d{3}$"
                },
                "description": "Components affected by this debt"
              }
            }
          }
        },
        "debt_mitigation_strategy": {
          "type": "string",
          "minLength": 100,
          "maxLength": 1000,
          "description": "Overall strategy for managing technical debt"
        }
      }
    },
    "session_summary": {
      "type": "object",
      "description": "Summary of the Q&A session results",
      "properties": {
        "all_blocking_resolved": {
          "type": "boolean",
          "description": "Whether all blocking questions have been answered"
        },
        "ready_to_proceed": {
          "type": "boolean",
          "description": "Whether there's enough clarity to proceed with implementation"
        },
        "outstanding_questions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^Q-\\d{3}$"
          },
          "description": "Question IDs still outstanding"
        },
        "follow_up_needed": {
          "type": "boolean",
          "description": "Whether a follow-up session is needed"
        },
        "key_decisions_made": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 30,
            "maxLength": 300
          },
          "description": "Key decisions made during the session"
        }
      }
    }
  }
}